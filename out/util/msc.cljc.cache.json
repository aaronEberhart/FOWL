["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$util.msc","~:imports",null,"~:requires",["^ ","~$str","~$clojure.string","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$file",["^ ","^5","~$util.msc/file","~:file","/home/aaron/Dropbox/fOWL/src/util/msc.cljc","~:line",6,"~:column",1,"~:end-line",6,"~:end-column",10,"~:meta",["^ ","^@","/home/aaron/Dropbox/fOWL/src/util/msc.cljc","^A",6,"^B",6,"^C",6,"^D",10],"~:tag","~$string"],"~$strToFile",["^ ","~:protocol-inline",null,"^E",["^ ","^@","/home/aaron/Dropbox/fOWL/src/util/msc.cljc","^A",7,"^B",7,"^C",7,"^D",16,"~:arglists",["~#list",["~$quote",["^K",[["^>","^9"]]]]]],"^5","~$util.msc/strToFile","^@","/home/aaron/Dropbox/fOWL/src/util/msc.cljc","^D",16,"~:method-params",["^K",[["^>","^9"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^B",1,"~:variadic?",false,"^A",7,"~:ret-tag","~$any","^C",7,"~:max-fixed-arity",2,"~:fn-var",true,"^J",["^K",["^L",["^K",[["^>","^9"]]]]]],"~$fib-seq-seq",["^ ","^5","~$util.msc/fib-seq-seq","^@","/home/aaron/Dropbox/fOWL/src/util/msc.cljc","^A",11,"^B",1,"^C",11,"^D",17,"^E",["^ ","^@","/home/aaron/Dropbox/fOWL/src/util/msc.cljc","^A",11,"^B",6,"^C",11,"^D",17],"^F","~$cljs.core/LazySeq"],"~$lazer",["^ ","^I",null,"^E",["^ ","^@","/home/aaron/Dropbox/fOWL/src/util/msc.cljc","^A",13,"^B",7,"^C",13,"^D",12,"^J",["^K",["^L",["^K",[["~$coll"],["^Z","~$filteringPredicate"],["^Z","^[","~$mapFunction"]]]]],"~:doc","makes any valid coll into a lazy-seq,\n with an optional filter and map on elements.\n based on https://clojure.org/reference/lazy","~:top-fn",["^ ","^Q",false,"~:fixed-arity",3,"^T",3,"^N",[["^Z"],["^Z","^["],["^Z","^[","^10"]],"^J",["^K",[["^Z"],["^Z","^["],["^Z","^[","^10"]]],"^P",["^K",[null,null,null]]]],"^5","~$util.msc/lazer","^@","/home/aaron/Dropbox/fOWL/src/util/msc.cljc","^D",12,"^12",["^ ","^Q",false,"^13",3,"^T",3,"^N",[["^Z"],["^Z","^["],["^Z","^[","^10"]],"^J",["^K",[["^Z"],["^Z","^["],["^Z","^[","^10"]]],"^P",["^K",[null,null,null]]],"^N",[["^Z"],["^Z","^["],["^Z","^[","^10"]],"^O",null,"^13",3,"^P",["^K",[null,null,null]],"^B",1,"^Q",false,"~:methods",[["^ ","^13",1,"^Q",false,"^F","^S"],["^ ","^13",2,"^Q",false,"^F","^S"],["^ ","^13",3,"^Q",false,"^F","^X"]],"^A",13,"^C",13,"^T",3,"^U",true,"^J",["^K",[["^Z"],["^Z","^["],["^Z","^[","^10"]]],"^11","makes any valid coll into a lazy-seq,\n with an optional filter and map on elements.\n based on https://clojure.org/reference/lazy"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:append"]],"~:order",["^1:"]],"^11",null]